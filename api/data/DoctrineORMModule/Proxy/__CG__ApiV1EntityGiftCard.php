<?php

namespace DoctrineORMModule\Proxy\__CG__\Api\V1\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class GiftCard extends \Api\V1\Entity\GiftCard implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getSubscriptionId()
    {
        $this->__load();
        return parent::getSubscriptionId();
    }

    public function setSubscriptionId($subscriptionId)
    {
        $this->__load();
        return parent::setSubscriptionId($subscriptionId);
    }

    public function getRecipientEmail()
    {
        $this->__load();
        return parent::getRecipientEmail();
    }

    public function setRecipientEmail($recipientEmail)
    {
        $this->__load();
        return parent::setRecipientEmail($recipientEmail);
    }

    public function getSenderId()
    {
        $this->__load();
        return parent::getSenderId();
    }

    public function setSenderId($senderId)
    {
        $this->__load();
        return parent::setSenderId($senderId);
    }

    public function getMessage()
    {
        $this->__load();
        return parent::getMessage();
    }

    public function setMessage($message)
    {
        $this->__load();
        return parent::setMessage($message);
    }

    public function getDeliveryDate()
    {
        $this->__load();
        return parent::getDeliveryDate();
    }

    public function setDeliveryDate($deliveryDate)
    {
        $this->__load();
        return parent::setDeliveryDate($deliveryDate);
    }

    public function setIsDelivered($value)
    {
        $this->__load();
        return parent::setIsDelivered($value);
    }

    public function getIsDelivered()
    {
        $this->__load();
        return parent::getIsDelivered();
    }

    public function getResourceId()
    {
        $this->__load();
        return parent::getResourceId();
    }

    public function getSubscriptions()
    {
        $this->__load();
        return parent::getSubscriptions();
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function getCode()
    {
        $this->__load();
        return parent::getCode();
    }

    public function setCode($code)
    {
        $this->__load();
        return parent::setCode($code);
    }

    public function getCurrentUsages()
    {
        $this->__load();
        return parent::getCurrentUsages();
    }

    public function setCurrentUsages($currentUsages)
    {
        $this->__load();
        return parent::setCurrentUsages($currentUsages);
    }

    public function getIsActive()
    {
        $this->__load();
        return parent::getIsActive();
    }

    public function setIsActive($isActive)
    {
        $this->__load();
        return parent::setIsActive($isActive);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getMaxRedemption()
    {
        $this->__load();
        return parent::getMaxRedemption();
    }

    public function setMaxRedemption($maxRedemption)
    {
        $this->__load();
        return parent::setMaxRedemption($maxRedemption);
    }

    public function getRedemptionStartDate()
    {
        $this->__load();
        return parent::getRedemptionStartDate();
    }

    public function setRedemptionStartDate($redemptionStartDate)
    {
        $this->__load();
        return parent::setRedemptionStartDate($redemptionStartDate);
    }

    public function getRedemptionEndDate()
    {
        $this->__load();
        return parent::getRedemptionEndDate();
    }

    public function setRedemptionEndDate($redemptionEndDate)
    {
        $this->__load();
        return parent::setRedemptionEndDate($redemptionEndDate);
    }

    public function getSubscriptionLength()
    {
        $this->__load();
        return parent::getSubscriptionLength();
    }

    public function setSubscriptionLength($subscriptionLength)
    {
        $this->__load();
        return parent::setSubscriptionLength($subscriptionLength);
    }

    public function getPlan()
    {
        $this->__load();
        return parent::getPlan();
    }

    public function setPlan($plan)
    {
        $this->__load();
        return parent::setPlan($plan);
    }

    public function getCodeString()
    {
        $this->__load();
        return parent::getCodeString();
    }

    public function setCodeString($codeString)
    {
        $this->__load();
        return parent::setCodeString($codeString);
    }

    public function getPrice()
    {
        $this->__load();
        return parent::getPrice();
    }

    public function setPrice($price)
    {
        $this->__load();
        return parent::setPrice($price);
    }

    public function isFree()
    {
        $this->__load();
        return parent::isFree();
    }

    public function isValidPlan($plan)
    {
        $this->__load();
        return parent::isValidPlan($plan);
    }

    public function isDeleted()
    {
        $this->__load();
        return parent::isDeleted();
    }

    public function setDeleted($deleted)
    {
        $this->__load();
        return parent::setDeleted($deleted);
    }

    public function getCreated()
    {
        $this->__load();
        return parent::getCreated();
    }

    public function getModified()
    {
        $this->__load();
        return parent::getModified();
    }

    public function setModified($modified)
    {
        $this->__load();
        return parent::setModified($modified);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'code', 'currentUsages', 'isActive', 'name', 'maxRedemption', 'redemptionStartDate', 'redemptionEndDate', 'subscriptionLength', 'price', 'codeString', 'plan', 'deleted', 'created', 'modified', 'subscriptions', 'recipientEmail', 'senderId', 'subscriptionId', 'message', 'deliveryDate', 'isDelivered');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}